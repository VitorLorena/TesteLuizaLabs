package com.luizaLabs.Cadastro.service;

import java.nio.charset.Charset;
import java.util.Optional;

import org.apache.tomcat.util.codec.binary.Base64;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;

import com.luizaLabs.Cadastro.model.usuario;
import com.luizaLabs.Cadastro.model.usuarioLogin;
import com.luizaLabs.Cadastro.reporsitory.usuarioRepository;


@Service
public class usuarioService {
	
	@Autowired
	private usuarioRepository userRepository;

	public Optional<usuario> cadastrarUsuario(usuario user) {

		if (userRepository.findByUsuario(user.getUsuario()).isPresent())
			return Optional.empty();
		
		BCryptPasswordEncoder encoder = new BCryptPasswordEncoder();
		
		String senhaEncoder = encoder.encode(user.getSenha());
		
		user.setSenha(senhaEncoder);
		
		return Optional.of(userRepository.save(user));
		
	}

	private String gerarBasicToken(String usuario, String senha) {

		String token = usuario + ":" + senha;
		byte[] tokenBase64 = Base64.encodeBase64(token.getBytes(Charset.forName("US-ASCII")));
		
		return "Basic " + new String(tokenBase64);
	}

}
